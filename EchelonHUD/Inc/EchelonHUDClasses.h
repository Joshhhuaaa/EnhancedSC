/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef ECHELONHUD_API
#define ECHELONHUD_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern ECHELONHUD_API FName ECHELONHUD_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(KeyEvent)
AUTOGENERATE_NAME(PostRender)
AUTOGENERATE_NAME(SetPause)
AUTOGENERATE_NAME(SendConsoleCommand)
AUTOGENERATE_NAME(GotoStateSafe)
AUTOGENERATE_NAME(StopRender)
AUTOGENERATE_NAME(DrawErrorMsgBox)
AUTOGENERATE_NAME(GetStateNameSafe)
AUTOGENERATE_NAME(OwnerGotoStateSafe)
AUTOGENERATE_NAME(OwnerDrawHUD)

#ifndef NAMES_ONLY

#define UCONST_SPACING_ERROR_BOX 50
#define UCONST_ERROR_BOX_WIDTH 250
#define UCONST_SPACE_BETWEEN_ICONS 5
#define UCONST_MAX_COLOR 90
#define UCONST_COMPUTER_Y 35
#define UCONST_COMPUTER_X 65
#define UCONST_COMPUTER_HEIGHT 410
#define UCONST_COMPUTER_WIDTH 510
#define UCONST_SCREEN_HEIGHT 480
#define UCONST_SCREEN_WIDTH 640
#define UCONST_MAX_INTER_NAME_LENGHT 20
#define UCONST_INTER_OPT_BOX_OFFSET_Y 35
#define UCONST_INTER_OFFSET_Y 10
#define UCONST_INTER_OFFSET_X 50
#define UCONST_LIFEBAR_HEIGHT 194
#define UCONST_LIFEBAR_WIDTH 17

struct AEchelonMainHUD_eventDrawErrorMsgBox_Parms
{
    class UECanvas* Canvas;
    FString sErrorMsg;
};
struct AEchelonMainHUD_eventGotoStateSafe_Parms
{
    FName State;
};
struct AEchelonMainHUD_eventStopRender_Parms
{
    BITFIELD bSet;
};
struct AEchelonMainHUD_eventSetPause_Parms
{
    BITFIELD bSet;
};
class ECHELONHUD_API AEchelonMainHUD : public AEMainHUD
{
public:
    FLOAT TimeElapsed;
    BITFIELD bIncreaseColor:1 GCC_PACK(4);
    INT tmpColor GCC_PACK(4);
    class AEQInvHUD* QuickInvAndCurrentItems;
    class AEQInvHUDXbox* QuickInvAndCurrentItemsXbox;
    class AEMainMenuHUD* MainMenuHUD;
    class AEGameMenuHUD* GameMenuHUD;
    INT TimerCounter;
    INT OldTimeCounter;
    class AEPlayerController* EPC;
    class AEchelonGameInfo* eGame;
    class AEchelonLevelInfo* ELevel;
    BITFIELD bDrawMainHUD:1 GCC_PACK(4);
    BITFIELD bErrorFound:1;
    BITFIELD bRestoreState:1;
    BITFIELD bStockInMemory:1;
    BITFIELD bShowHUD:1;
    DECLARE_FUNCTION(execCheckError);
    void eventDrawErrorMsgBox(class UECanvas* Canvas, const FString& sErrorMsg)
    {
        AEchelonMainHUD_eventDrawErrorMsgBox_Parms Parms;
        Parms.Canvas=Canvas;
        Parms.sErrorMsg=sErrorMsg;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_DrawErrorMsgBox),&Parms);
    }
    void eventGotoStateSafe(FName State)
    {
        AEchelonMainHUD_eventGotoStateSafe_Parms Parms;
        Parms.State=State;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_GotoStateSafe),&Parms);
    }
    void eventStopRender(BITFIELD bSet)
    {
        AEchelonMainHUD_eventStopRender_Parms Parms;
        Parms.bSet=bSet;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_StopRender),&Parms);
    }
    void eventSetPause(BITFIELD bSet)
    {
        AEchelonMainHUD_eventSetPause_Parms Parms;
        Parms.bSet=bSet;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_SetPause),&Parms);
    }
    DECLARE_CLASS(AEchelonMainHUD,AEMainHUD,0|CLASS_Config,EchelonHUD)
    NO_DEFAULT_CONSTRUCTOR(AEchelonMainHUD)
};

enum BKG_COLOR
{
    BKG_NONE                =0,
    BKG_REG                 =1,
    BKG_PALE                =2,
    BKG_DARK                =3,
    BKG_MAX                 =4,
};
enum XBOX_BUTTON
{
    BUT_NONE                =0,
    but_a                   =1,
    but_b                   =2,
    but_x                   =3,
    but_y                   =4,
    but_start               =5,
    BUT_MAX                 =6,
};
enum MSGBOX_TYPE
{
    ID_YESNO                =0,
    ID_OK                   =1,
    ID_DIFFICULTY           =2,
    ID_LOAD                 =3,
    ID_CONTINUE             =4,
    ID_NOTHING              =5,
    ID_OVERWRITE            =6,
    ID_MAX                  =7,
};
enum MSGBOX_RETURN
{
    IDYES                   =0,
    IDNO                    =1,
    IDOK                    =2,
    IDEASY                  =3,
    IDNORMAL                =4,
    IDHARD                  =5,
    IDNONE                  =6,
    IDCONTINUE              =7,
    IDBACKTOGAME            =8,
    IDBACK                  =9,
};
#define UCONST_NB_LANGUAGE 6
#define UCONST_NB_NOISE_LINE 3

struct AEMenuHUD_eventSendConsoleCommand_Parms
{
    FString Command;
    FString ReturnValue;
};
struct AEMenuHUD_eventGetStateNameSafe_Parms
{
    FName ReturnValue;
};
struct AEMenuHUD_eventGotoStateSafe_Parms
{
    FName State;
};
struct AEMenuHUD_eventPostRender_Parms
{
    class UECanvas* Canvas;
};
struct AEMenuHUD_eventKeyEvent_Parms
{
    FString Key;
    BYTE Action;
    FLOAT Delta;
    BITFIELD ReturnValue;
};
class ECHELONHUD_API AEMenuHUD : public AActor
{
public:
    INT UCONST_NB_MAINMENU_ITEM;
    class AEchelonGameInfo* eGame;
    class AEchelonLevelInfo* ELevel;
    class AEPlayerController* EPC;
    class AETextureManager* TMANAGER_MENU;
    class AETMENU* TMENU;
    class AETextureManager* TMANAGER_GAME;
    class AETGAME* TGAME;
    class AETICON* TICON;
    class UMaterial* PdaBorder;
    class UTexture* EchelonLogo;
    class UTexture* HUDBackground;
    class UTexture* ETPixel;
    class UTexture* PdaBackGround;
    class UTexture* MenuBar;
    INT navAlpha;
    FLOAT navAlphaTimer;
    BITFIELD bNavAlphaIncrease:1 GCC_PACK(4);
    INT depth GCC_PACK(4);
    INT Row;
    INT Column;
    INT Cursor;
    INT topDepth;
    INT oldScheme;
    class USound* BeepSound1;
    class USound* BeepSound2;
    class USound* BeepSound3;
    class USound* MenuMusic;
    BITFIELD bNavLeft:1 GCC_PACK(4);
    BITFIELD bNavUp:1;
    BITFIELD bNavRight:1;
    BITFIELD bNavDown:1;
    FStringNoInit szTempPlayerName GCC_PACK(4);
    INT curAlpha;
    FLOAT curAlphaTimer;
    BITFIELD bCurAlphaIncrease:1 GCC_PACK(4);
    FLOAT fNoiseLine[3] GCC_PACK(4);
    FStringNoInit szLanguage[6];
    INT RegularControllerOffSet;
    INT controllerOffset;
    BITFIELD bControllerLeftTransition:1 GCC_PACK(4);
    BITFIELD bControllerRightTransition:1;
    FLOAT controllerTimer GCC_PACK(4);
    INT holdController;
    BITFIELD bMessageBox:1 GCC_PACK(4);
    INT MsgType GCC_PACK(4);
    INT msgPos;
    FColor BorderColor;
    FName nLastMenuPage;
    BITFIELD bBlink:1 GCC_PACK(4);
    FLOAT blinkTimer GCC_PACK(4);
    DECLARE_FUNCTION(execDrawLoading);
    DECLARE_FUNCTION(execTickMenuHUD);
    FString eventSendConsoleCommand(const FString& Command)
    {
        AEMenuHUD_eventSendConsoleCommand_Parms Parms;
        Parms.Command=Command;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_SendConsoleCommand),&Parms);
        return Parms.ReturnValue;
    }
    FName eventGetStateNameSafe()
    {
        AEMenuHUD_eventGetStateNameSafe_Parms Parms;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_GetStateNameSafe),&Parms);
        return Parms.ReturnValue;
    }
    void eventGotoStateSafe(FName State)
    {
        AEMenuHUD_eventGotoStateSafe_Parms Parms;
        Parms.State=State;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_GotoStateSafe),&Parms);
    }
    void eventPostRender(class UECanvas* Canvas)
    {
        AEMenuHUD_eventPostRender_Parms Parms;
        Parms.Canvas=Canvas;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_PostRender),&Parms);
    }
    BITFIELD eventKeyEvent(const FString& Key, BYTE Action, FLOAT Delta)
    {
        AEMenuHUD_eventKeyEvent_Parms Parms;
        Parms.ReturnValue=0;
        Parms.Key=Key;
        Parms.Action=Action;
        Parms.Delta=Delta;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_KeyEvent),&Parms);
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(AEMenuHUD,AActor,0,EchelonHUD)
    NO_DEFAULT_CONSTRUCTOR(AEMenuHUD)
};

enum eMapExistCode
{
    eMAP_NO                 =0,
    eMAP_YES                =1,
    eMAP_YES_DOWNLOAD       =2,
    eMAP_MAX                =3,
};

struct AEMainMenuHUD_eventStopRender_Parms
{
    BITFIELD bSet;
};
struct AEMainMenuHUD_eventOwnerDrawHUD_Parms
{
    BITFIELD bDraw;
};
struct AEMainMenuHUD_eventOwnerGotoStateSafe_Parms
{
    FName NewState;
};
class ECHELONHUD_API AEMainMenuHUD : public AEMenuHUD
{
public:
    BITFIELD bEdit:1 GCC_PACK(4);
    INT MainMenuDepth GCC_PACK(4);
    BITFIELD bSelectedBadProfile:1 GCC_PACK(4);
    BITFIELD bInactVideoPlaying:1;
    BITFIELD bStopInactVideo:1;
    BITFIELD bInputCheck:1;
    BITFIELD bLoadPrefBad:1;
    BITFIELD bSavePref:1;
    INT iLoadPredBadSkip GCC_PACK(4);
    INT PlayerMenuDepth;
    INT topPlayerMenuDepth;
    BITFIELD bStartTimer:1 GCC_PACK(4);
    FLOAT fDisplayTime GCC_PACK(4);
    INT SaveGameMenuDepth;
    INT iErrorCode;
    BITFIELD bNotEnoughMemory:1 GCC_PACK(4);
    BITFIELD bMemoryCheckDone:1;
    INT iBlockMissing GCC_PACK(4);
    BITFIELD bSavingGame:1 GCC_PACK(4);
    BITFIELD bSavingGameSkipFrame:1;
    BITFIELD bSavingGameBad:1;
    BITFIELD bWantToExitGame:1;
    BITFIELD bDeleteGame:1;
    BITFIELD bDeleteGameBad:1;
    BITFIELD bDeleteGameSkipFrame:1;
    BITFIELD bFromStartMenu:1;
    class AEPlayerInfo* tempPlayerInfo GCC_PACK(4);
    BITFIELD bConfirmContinue:1 GCC_PACK(4);
    BITFIELD bLoadingProfile:1;
    BITFIELD bLoadingProfileBad:1;
    BITFIELD bMaxSaveGameReach:1;
    BITFIELD bInvalidPlayerName:1;
    BITFIELD bCheckLoading:1;
    BITFIELD bCreatingNewProfile:1;
    BITFIELD bSaveWindowIsUp:1;
    BITFIELD bConfirmBack:1;
    BITFIELD bMusicStarted:1;
    BITFIELD bDiskFull:1;
    BITFIELD bWantToFreeFile:1;
    BITFIELD bBadProfileCreation:1;
    BITFIELD bNotEnoughMemProfile:1;
    INT LoadGameMenuDepth GCC_PACK(4);
    INT LoadGameMenuScroll;
    BITFIELD bIsOnLevel:1 GCC_PACK(4);
    BITFIELD bLoadingGame:1;
    BITFIELD bLoadingGameBad:1;
    BITFIELD bLoadingGameSkipFrame:1;
    INT iStartPos GCC_PACK(4);
    INT iOldStartPos;
    INT iEndPos;
    INT iOldEndPos;
    BITFIELD bScrollUp:1 GCC_PACK(4);
    BITFIELD bScrollDown:1;
    FStringNoInit SelectedDownloadMap GCC_PACK(4);
    INT CursorPos;
    BITFIELD bCheckOnline:1 GCC_PACK(4);
    BITFIELD bCheckOnlineSkipFrame:1;
    INT tempPercentage GCC_PACK(4);
    INT oldOffsetX;
    INT oldOffsetY;
    INT slidderPos;
    INT oldSlidderPos;
    BITFIELD bBrightness:1 GCC_PACK(4);
    INT ContrastSlidderPos GCC_PACK(4);
    INT BrightnessSlidderPos;
    INT MusicSlidderPos;
    INT VoiceSlidderPos;
    INT SfxSlidderPos;
    INT AmbientSlidderPos;
    INT CurrentSoundSlot;
    FName NextState;
    BITFIELD bOpenVideo:1 GCC_PACK(4);
    BITFIELD bCloseVideo:1;
    FLOAT DemoTimer GCC_PACK(4);
    FName prevState;
    INT iMenuDepth;
    INT iMenuSceneDepth;
    INT iMenuRdmFactDepth;
    INT iMenuUbiGameDepth;
    INT iMenuSamFisherDepth;
    FStringNoInit tExFeature[5];
    FStringNoInit tExBhdTheScene[9];
    FStringNoInit tExUbiGame[4];
    FStringNoInit tExSamFisher[2];
    BITFIELD bStopBhdTheSceneVideo:1 GCC_PACK(4);
    BITFIELD bBhdTheSceneVideoPlaying:1;
    BITFIELD bStopUbiGameVideo:1;
    BITFIELD bUbiGameVideoPlaying:1;
    BITFIELD bStopSamFisherVideo:1;
    BITFIELD bSamFisherVideoPlaying:1;
    class AEchelonMainHUD* myEchelonMainHUDOwner GCC_PACK(4);
    class AEPlayerInfo* spawner;
    FStringNoInit VideoName;
    INT iVideoIndex;
    BITFIELD bCreditVideoPlaying:1 GCC_PACK(4);
    BITFIELD bStopVideo:1;
    BITFIELD bFirstPage:1;
    BITFIELD bSkipFrame:1;
    FLOAT fCurrentTime GCC_PACK(4);
    BITFIELD bDownloadAvailable:1 GCC_PACK(4);
    BITFIELD bEthernetOK:1;
    BITFIELD bShowEthernetMsgON:1;
    BITFIELD bShowEthernetMsgOFF:1;
    BITFIELD bCheckDownload:1;
    BITFIELD bShowLoadingScreen:1;
    DECLARE_FUNCTION(execKeyEvent_s_RandomFact);
    DECLARE_FUNCTION(execPostRender_s_RandomFact);
    DECLARE_FUNCTION(execBeginState_s_RandomFact);
    DECLARE_FUNCTION(execKeyEvent_s_UbiGame);
    DECLARE_FUNCTION(execPostRender_s_UbiGame);
    DECLARE_FUNCTION(execBeginState_s_UbiGame);
    DECLARE_FUNCTION(execKeyEvent_s_BehindTheScene);
    DECLARE_FUNCTION(execPostRender_s_BehindTheScene);
    DECLARE_FUNCTION(execBeginState_s_BehindTheScene);
    DECLARE_FUNCTION(execKeyEvent_s_Inactivity);
    DECLARE_FUNCTION(execPostRender_s_Inactivity);
    DECLARE_FUNCTION(execBeginState_s_Inactivity);
    DECLARE_FUNCTION(execKeyEvent_s_PlayDemo);
    DECLARE_FUNCTION(execPostRender_s_PlayDemo);
    DECLARE_FUNCTION(execBeginState_s_PlayDemo);
    DECLARE_FUNCTION(execKeyEvent_s_SetBrightness);
    DECLARE_FUNCTION(execPostRender_s_SetBrightness);
    DECLARE_FUNCTION(execEndState_s_SetBrightness);
    DECLARE_FUNCTION(execBeginState_s_SetBrightness);
    DECLARE_FUNCTION(execKeyEvent_s_SetHUDPosition);
    DECLARE_FUNCTION(execPostRender_s_SetHUDPosition);
    DECLARE_FUNCTION(execEndState_s_SetHUDPosition);
    DECLARE_FUNCTION(execBeginState_s_SetHUDPosition);
    DECLARE_FUNCTION(execKeyEvent_s_SettingsMenu);
    DECLARE_FUNCTION(execPostRender_s_SettingsMenu);
    DECLARE_FUNCTION(execBeginState_s_SettingsMenu);
    DECLARE_FUNCTION(execTick_s_SettingsMenu);
    DECLARE_FUNCTION(execTick_s_LoadGame);
    DECLARE_FUNCTION(execKeyEvent_s_LoadGame);
    DECLARE_FUNCTION(execPostRender_s_LoadGame);
    DECLARE_FUNCTION(execBeginState_s_LoadGame);
    DECLARE_FUNCTION(execLoadTInfo);
    DECLARE_FUNCTION(execSaveTInfo);
    DECLARE_FUNCTION(execLoadProfile);
    DECLARE_FUNCTION(execUpdateProfile);
    DECLARE_FUNCTION(execTick_s_SaveGame);
    DECLARE_FUNCTION(execEndState_s_SaveGame);
    DECLARE_FUNCTION(execKeyEvent_s_SaveGame);
    DECLARE_FUNCTION(execPostRender_s_SaveGame);
    DECLARE_FUNCTION(execBeginState_s_SaveGame);
    DECLARE_FUNCTION(execKeyEvent_s_Controller);
    DECLARE_FUNCTION(execPostRender_s_Controller);
    DECLARE_FUNCTION(execTick_s_Controller);
    DECLARE_FUNCTION(execBeginState_s_Controller);
    DECLARE_FUNCTION(execEndState_s_PlayerSettings);
    DECLARE_FUNCTION(execKeyEvent_s_PlayerSettings);
    DECLARE_FUNCTION(execPostRender_s_PlayerSettings);
    DECLARE_FUNCTION(execBeginState_s_PlayerSettings);
    DECLARE_FUNCTION(execKeyEvent_s_PlayerMenu);
    DECLARE_FUNCTION(execPostRender_s_PlayerMenu);
    DECLARE_FUNCTION(execBeginState_s_PlayerMenu);
    DECLARE_FUNCTION(execTick_s_PlayerMenu);
    DECLARE_FUNCTION(execKeyEvent_s_RestoreSaveGame);
    DECLARE_FUNCTION(execPostRender_s_RestoreSaveGame);
    DECLARE_FUNCTION(execBeginState_s_RestoreSaveGame);
    DECLARE_FUNCTION(execKeyEvent_s_Download);
    DECLARE_FUNCTION(execPostRender_s_Download);
    DECLARE_FUNCTION(execBeginState_s_Download);
    DECLARE_FUNCTION(execKeyEvent_s_Credit);
    DECLARE_FUNCTION(execPostRender_s_Credit);
    DECLARE_FUNCTION(execBeginState_s_Credit);
    DECLARE_FUNCTION(execKeyEvent_s_SavePlayerInfo);
    DECLARE_FUNCTION(execPostRender_s_SavePlayerInfo);
    DECLARE_FUNCTION(execTick_s_SavePlayerInfo);
    DECLARE_FUNCTION(execBeginState_s_SavePlayerInfo);
    DECLARE_FUNCTION(execKeyEvent_s_KeyBoard);
    DECLARE_FUNCTION(execPostRender_s_KeyBoard);
    DECLARE_FUNCTION(execTick_s_KeyBoard);
    DECLARE_FUNCTION(execBeginState_s_KeyBoard);
    DECLARE_FUNCTION(execKeyEvent_s_MainMenu);
    DECLARE_FUNCTION(execPostRender_s_MainMenu);
    DECLARE_FUNCTION(execEndState_s_MainMenu);
    DECLARE_FUNCTION(execBeginState_s_MainMenu);
    DECLARE_FUNCTION(execBeginState_s_StartGame);
    DECLARE_FUNCTION(execTickMainMenuHUD);
    void eventStopRender(BITFIELD bSet)
    {
        AEMainMenuHUD_eventStopRender_Parms Parms;
        Parms.bSet=bSet;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_StopRender),&Parms);
    }
    void eventOwnerDrawHUD(BITFIELD bDraw)
    {
        AEMainMenuHUD_eventOwnerDrawHUD_Parms Parms;
        Parms.bDraw=bDraw;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_OwnerDrawHUD),&Parms);
    }
    void eventOwnerGotoStateSafe(FName NewState)
    {
        AEMainMenuHUD_eventOwnerGotoStateSafe_Parms Parms;
        Parms.NewState=NewState;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_OwnerGotoStateSafe),&Parms);
    }
    DECLARE_CLASS(AEMainMenuHUD,AEMenuHUD,0,EchelonHUD)
    NO_DEFAULT_CONSTRUCTOR(AEMainMenuHUD)
};


class ECHELONHUD_API AEGameMainMenuHUD : public AEMainMenuHUD
{
public:
    class AEGameMenuHUD* EGameMenuHUDOwner;
    BITFIELD bInsideSubMenu:1 GCC_PACK(4);
    DECLARE_FUNCTION(execKeyEvent_s_ControllerInGame);
    DECLARE_FUNCTION(execPostRender_s_ControllerInGame);
    DECLARE_FUNCTION(execTick_s_ControllerInGame);
    DECLARE_FUNCTION(execBeginState_s_ControllerInGame);
    DECLARE_FUNCTION(execTick_s_SavePlayerInfo_MainMenu);
    DECLARE_FUNCTION(execKeyEvent_s_SavePlayerInfo_MainMenu);
    DECLARE_FUNCTION(execKeyEvent_s_PlayerSettings_MainMenu);
    DECLARE_FUNCTION(execKeyEvent_s_SettingsMenu_MainMenu);
    DECLARE_FUNCTION(execKeyEvent_s_LoadGame_MainMenu);
    DECLARE_FUNCTION(execTickGameMainMenuHUD);
    DECLARE_CLASS(AEGameMainMenuHUD,AEMainMenuHUD,0,EchelonHUD)
    NO_DEFAULT_CONSTRUCTOR(AEGameMainMenuHUD)
};

#define UCONST_NB_MISSION_NOISE_LINE 6
#define UCONST_MAX_SECTION_TITLES 4

struct AEGameMenuHUD_eventOwnerGotoStateSafe_Parms
{
    FName NewState;
};
class ECHELONHUD_API AEGameMenuHUD : public AEMenuHUD
{
public:
    INT UCONST_NB_GAMEMENU_MAINMENU_SECTION;
    INT MenuSection;
    INT TitleSection;
    INT SubTitleSection;
    INT MainMenuDepth;
    BITFIELD bGameMainMenu:1 GCC_PACK(4);
    BITFIELD bFinalMap:1;
    class AEGameMainMenuHUD* GameMainMenuHUD GCC_PACK(4);
    INT TitleSectionMainMenu;
    INT GoalCurScroll;
    INT GoalNbScroll;
    INT NoteCurScroll;
    INT NoteNbScroll;
    BITFIELD bComputeScroll:1 GCC_PACK(4);
    INT TitleSectionGameInfo GCC_PACK(4);
    FStringNoInit szSectionTitles[4];
    FStringNoInit szSubSectionTitles[4];
    class AEInventory* EpcInventory;
    BYTE CurrentCategory;
    INT ItemPos;
    INT InvMenuDepth;
    INT TitleSectionInv;
    BITFIELD bCheckVideo:1 GCC_PACK(4);
    BITFIELD bErrorIsCatch:1;
    BITFIELD bShowDesc:1;
    INT HowToUseScrollPos GCC_PACK(4);
    INT HowToUseScrollMaxPos;
    INT missionFilterAlpha;
    FLOAT missionFilterTimer;
    FLOAT missionNoiseLineX[6];
    FLOAT missionNoiseLineY[6];
    INT missionLinesAlpha;
    FLOAT missionTextScale;
    FLOAT missionTextScaleX;
    FLOAT missionTextScaleY;
    INT blackAlpha;
    FLOAT blackAlphaTimer;
    BITFIELD bIncrease:1 GCC_PACK(4);
    BITFIELD bDrawSaveMission:1;
    BITFIELD bStartTimer:1;
    FLOAT fDisplayTime GCC_PACK(4);
    BITFIELD bSkipFrame:1 GCC_PACK(4);
    INT TrainingDepth GCC_PACK(4);
    BITFIELD bGadgetVideoIsPlaying:1 GCC_PACK(4);
    FStringNoInit sVideoName GCC_PACK(4);
    class AEInventoryItem* CurrentItem;
    INT iNbrOfRecon;
    INT iNbrOfReconSpot;
    BITFIELD bNbrOfSpotIsFound:1 GCC_PACK(4);
    BITFIELD bNeedToDrawScrollBar:1;
    INT iIndexReconScroll GCC_PACK(4);
    INT iIndexRecon;
    BITFIELD bScrollUp:1 GCC_PACK(4);
    BITFIELD bScrollDown:1;
    INT iStartPos GCC_PACK(4);
    INT iOldStartPos;
    INT iEndPos;
    INT iOldEndPos;
    BITFIELD bReconSelected:1 GCC_PACK(4);
    class UERecon* tCurrentRecon GCC_PACK(4);
    INT iIndexCurRoom;
    INT ReconDescScrollPos;
    INT ReconDescMaxPos;
    INT iErrorType;
    BITFIELD bMissionFailedToMenu:1 GCC_PACK(4);
    INT iNbrOfLetter GCC_PACK(4);
    BITFIELD bGameIsFinished:1 GCC_PACK(4);
    FStringNoInit MissionFailedMsg GCC_PACK(4);
    BITFIELD bInsideSubMenu:1 GCC_PACK(4);
    DECLARE_FUNCTION(execTick_s_MissionComplete);
    DECLARE_FUNCTION(execPostRender_s_MissionComplete);
    DECLARE_FUNCTION(execKeyEvent_s_MissionComplete);
    DECLARE_FUNCTION(execBeginState_s_MissionComplete);
    DECLARE_FUNCTION(execTick_s_MissionFailed);
    DECLARE_FUNCTION(execPostRender_s_MissionFailed);
    DECLARE_FUNCTION(execKeyEvent_s_MissionFailed);
    DECLARE_FUNCTION(execBeginState_s_MissionFailed);
    DECLARE_FUNCTION(execPostRender_s_Training);
    DECLARE_FUNCTION(execKeyEvent_s_Training);
    DECLARE_FUNCTION(execBeginState_s_Training);
    DECLARE_FUNCTION(execPostRender_s_MainMenu);
    DECLARE_FUNCTION(execKeyEvent_s_MainMenu);
    DECLARE_FUNCTION(execBeginState_s_MainMenu);
    DECLARE_FUNCTION(execPostRender_s_GameInfo);
    DECLARE_FUNCTION(execKeyEvent_s_GameInfo);
    DECLARE_FUNCTION(execBeginState_s_GameInfo);
    DECLARE_FUNCTION(execEndState_s_Inventory);
    DECLARE_FUNCTION(execPostRender_s_Inventory);
    DECLARE_FUNCTION(execKeyEvent_s_Inventory);
    DECLARE_FUNCTION(execBeginState_s_Inventory);
    DECLARE_FUNCTION(execPostRender_s_QuickLoad);
    DECLARE_FUNCTION(execKeyEvent_s_QuickLoad);
    DECLARE_FUNCTION(execBeginState_s_QuickLoad);
    DECLARE_FUNCTION(execPostRender_s_QuickSave);
    DECLARE_FUNCTION(execKeyEvent_s_QuickSave);
    DECLARE_FUNCTION(execBeginState_s_QuickSave);
    DECLARE_FUNCTION(execCheckFinalMap);
    void eventOwnerGotoStateSafe(FName NewState)
    {
        AEGameMenuHUD_eventOwnerGotoStateSafe_Parms Parms;
        Parms.NewState=NewState;
        ProcessEvent(FindFunctionChecked(ECHELONHUD_OwnerGotoStateSafe),&Parms);
    }
    DECLARE_CLASS(AEGameMenuHUD,AEMenuHUD,0,EchelonHUD)
    NO_DEFAULT_CONSTRUCTOR(AEGameMenuHUD)
};

#endif

AUTOGENERATE_FUNCTION(AEMenuHUD,1337,execDrawLoading);
AUTOGENERATE_FUNCTION(AEMenuHUD,1397,execTickMenuHUD);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1739,execKeyEvent_s_RandomFact);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1738,execPostRender_s_RandomFact);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1737,execBeginState_s_RandomFact);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1736,execKeyEvent_s_UbiGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1735,execPostRender_s_UbiGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1734,execBeginState_s_UbiGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1733,execKeyEvent_s_BehindTheScene);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1732,execPostRender_s_BehindTheScene);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1731,execBeginState_s_BehindTheScene);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1787,execKeyEvent_s_Inactivity);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1786,execPostRender_s_Inactivity);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1785,execBeginState_s_Inactivity);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1393,execKeyEvent_s_PlayDemo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1392,execPostRender_s_PlayDemo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1391,execBeginState_s_PlayDemo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1390,execKeyEvent_s_SetBrightness);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1389,execPostRender_s_SetBrightness);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1388,execEndState_s_SetBrightness);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1387,execBeginState_s_SetBrightness);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1386,execKeyEvent_s_SetHUDPosition);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1385,execPostRender_s_SetHUDPosition);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1384,execEndState_s_SetHUDPosition);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1383,execBeginState_s_SetHUDPosition);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1382,execKeyEvent_s_SettingsMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1381,execPostRender_s_SettingsMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1380,execBeginState_s_SettingsMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1746,execTick_s_SettingsMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1706,execTick_s_LoadGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1379,execKeyEvent_s_LoadGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1378,execPostRender_s_LoadGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1377,execBeginState_s_LoadGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1773,execLoadTInfo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1772,execSaveTInfo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1771,execLoadProfile);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1770,execUpdateProfile);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1705,execTick_s_SaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1704,execEndState_s_SaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1703,execKeyEvent_s_SaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1702,execPostRender_s_SaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1701,execBeginState_s_SaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1376,execKeyEvent_s_Controller);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1375,execPostRender_s_Controller);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1374,execTick_s_Controller);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1373,execBeginState_s_Controller);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1719,execEndState_s_PlayerSettings);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1372,execKeyEvent_s_PlayerSettings);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1371,execPostRender_s_PlayerSettings);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1370,execBeginState_s_PlayerSettings);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1369,execKeyEvent_s_PlayerMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1368,execPostRender_s_PlayerMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1367,execBeginState_s_PlayerMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1715,execTick_s_PlayerMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1728,execKeyEvent_s_RestoreSaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1727,execPostRender_s_RestoreSaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1726,execBeginState_s_RestoreSaveGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1725,execKeyEvent_s_Download);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1724,execPostRender_s_Download);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1723,execBeginState_s_Download);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1722,execKeyEvent_s_Credit);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1721,execPostRender_s_Credit);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1720,execBeginState_s_Credit);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1366,execKeyEvent_s_SavePlayerInfo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1365,execPostRender_s_SavePlayerInfo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1364,execTick_s_SavePlayerInfo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1363,execBeginState_s_SavePlayerInfo);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1354,execKeyEvent_s_KeyBoard);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1353,execPostRender_s_KeyBoard);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1352,execTick_s_KeyBoard);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1351,execBeginState_s_KeyBoard);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1350,execKeyEvent_s_MainMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1349,execPostRender_s_MainMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1777,execEndState_s_MainMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1399,execBeginState_s_MainMenu);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1347,execBeginState_s_StartGame);
AUTOGENERATE_FUNCTION(AEMainMenuHUD,1346,execTickMainMenuHUD);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2335,execTick_s_MissionComplete);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2334,execPostRender_s_MissionComplete);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1781,execKeyEvent_s_MissionComplete);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2333,execBeginState_s_MissionComplete);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2332,execTick_s_MissionFailed);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2331,execPostRender_s_MissionFailed);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1780,execKeyEvent_s_MissionFailed);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2330,execBeginState_s_MissionFailed);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2329,execPostRender_s_Training);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2336,execKeyEvent_s_Training);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2337,execBeginState_s_Training);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2321,execPostRender_s_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2320,execKeyEvent_s_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2319,execBeginState_s_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2315,execPostRender_s_GameInfo);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2314,execKeyEvent_s_GameInfo);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2313,execBeginState_s_GameInfo);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2400,execEndState_s_Inventory);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2312,execPostRender_s_Inventory);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2311,execKeyEvent_s_Inventory);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,2310,execBeginState_s_Inventory);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1756,execPostRender_s_QuickLoad);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1755,execKeyEvent_s_QuickLoad);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1754,execBeginState_s_QuickLoad);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1753,execPostRender_s_QuickSave);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1752,execKeyEvent_s_QuickSave);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1751,execBeginState_s_QuickSave);
AUTOGENERATE_FUNCTION(AEGameMenuHUD,1179,execCheckFinalMap);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,1769,execKeyEvent_s_ControllerInGame);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,1768,execPostRender_s_ControllerInGame);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,1767,execTick_s_ControllerInGame);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,1766,execBeginState_s_ControllerInGame);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,2304,execTick_s_SavePlayerInfo_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,2303,execKeyEvent_s_SavePlayerInfo_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,2302,execKeyEvent_s_PlayerSettings_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,2301,execKeyEvent_s_SettingsMenu_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,2300,execKeyEvent_s_LoadGame_MainMenu);
AUTOGENERATE_FUNCTION(AEGameMainMenuHUD,1789,execTickGameMainMenuHUD);
AUTOGENERATE_FUNCTION(AEchelonMainHUD,1757,execCheckError);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
