/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef UWINDOW_API
#define UWINDOW_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern UWINDOW_API FName UWINDOW_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

enum PropertyCondition
{
    PC_None                 =0,
    PC_LessThan             =1,
    PC_Equal                =2,
    PC_GreaterThan          =3,
    PC_NotEqual             =4,
    PC_Contains             =5,
    PC_NotContains          =6,
    PC_MAX                  =7,
};
enum MessageBoxResult
{
    MR_None                 =0,
    MR_Yes                  =1,
    MR_No                   =2,
    MR_OK                   =3,
    MR_Cancel               =4,
    MR_MAX                  =5,
};
enum MessageBoxButtons
{
    MB_YesNo                =0,
    MB_OKCancel             =1,
    MB_OK                   =2,
    MB_YesNoCancel          =3,
    MB_Cancel               =4,
    MB_MAX                  =5,
};
enum MenuSound
{
    MS_MenuPullDown         =0,
    MS_MenuCloseUp          =1,
    MS_MenuItem             =2,
    MS_WindowOpen           =3,
    MS_WindowClose          =4,
    MS_ChangeTab            =5,
    MS_MAX                  =6,
};
enum FrameHitTest
{
    HT_NW                   =0,
    HT_N                    =1,
    HT_NE                   =2,
    HT_W                    =3,
    HT_E                    =4,
    HT_SW                   =5,
    HT_S                    =6,
    HT_SE                   =7,
    HT_TitleBar             =8,
    HT_DragHandle           =9,
    HT_None                 =10,
    HT_MAX                  =11,
};
#define UCONST_F_LargeBold 3
#define UCONST_F_Large 2
#define UCONST_F_Bold 1
#define UCONST_F_Normal 0

class UWINDOW_API UUWindowBase : public UObject
{
public:
    DECLARE_CLASS(UUWindowBase,UObject,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowBase)
};

enum WinMessage
{
    WM_LMouseDown           =0,
    WM_LMouseUp             =1,
    WM_MMouseDown           =2,
    WM_MMouseUp             =3,
    WM_RMouseDown           =4,
    WM_RMouseUp             =5,
    WM_MouseWheelDown       =6,
    WM_MouseWheelUp         =7,
    WM_KeyUp                =8,
    WM_KeyDown              =9,
    WM_KeyType              =10,
    WM_Paint                =11,
    WM_MAX                  =12,
};
#define UCONST_DE_WheelDownPressed 15
#define UCONST_DE_WheelUpPressed 14
#define UCONST_DE_HelpChanged 13
#define UCONST_DE_MouseEnter 12
#define UCONST_DE_DoubleClick 11
#define UCONST_DE_LMouseDown 10
#define UCONST_DE_MouseLeave 9
#define UCONST_DE_MouseMove 8
#define UCONST_DE_EnterPressed 7
#define UCONST_DE_RClick 6
#define UCONST_DE_MClick 5
#define UCONST_DE_Exit 4
#define UCONST_DE_Enter 3
#define UCONST_DE_Click 2
#define UCONST_DE_Change 1
#define UCONST_DE_Created 0

class UWINDOW_API UUWindowWindow : public UUWindowBase
{
public:
    FLOAT WinLeft;
    FLOAT WinTop;
    FLOAT WinWidth;
    FLOAT WinHeight;
    class UUWindowWindow* ParentWindow;
    class UUWindowWindow* FirstChildWindow;
    class UUWindowWindow* LastChildWindow;
    class UUWindowWindow* NextSiblingWindow;
    class UUWindowWindow* PrevSiblingWindow;
    class UUWindowWindow* ActiveWindow;
    class UUWindowRootWindow* Root;
    class UUWindowWindow* OwnerWindow;
    class UUWindowWindow* ModalWindow;
    FStringNoInit ToolTipString;
    BITFIELD bWindowVisible:1 GCC_PACK(4);
    BITFIELD bNoClip:1;
    BITFIELD bMouseDown:1;
    BITFIELD bRMouseDown:1;
    BITFIELD bMMouseDown:1;
    BITFIELD bAlwaysBehind:1;
    BITFIELD bAcceptsFocus:1;
    BITFIELD bAcceptsMouseFocus:1;
    BITFIELD bAlwaysOnTop:1;
    BITFIELD bLeaveOnscreen:1;
    BITFIELD bUWindowActive:1;
    BITFIELD bTransient:1;
    BITFIELD bAcceptsHotKeys:1;
    BITFIELD bIgnoreLDoubleClick:1;
    BITFIELD bIgnoreMDoubleClick:1;
    BITFIELD bIgnoreRDoubleClick:1;
    FLOAT ClickTime GCC_PACK(4);
    FLOAT MClickTime;
    FLOAT RClickTime;
    FLOAT ClickX;
    FLOAT ClickY;
    FLOAT MClickX;
    FLOAT MClickY;
    FLOAT RClickX;
    FLOAT RClickY;
    class UUWindowLookAndFeel* LookAndFeel;
    FRegion ClippingRegion;
    FRegion m_BorderTextureRegion;
    class UTexture* m_BorderTexture;
    FColor m_BorderColor;
    INT m_BorderStyle;
    FMouseCursor Cursor;
    DECLARE_FUNCTION(execGetTime);
    DECLARE_FUNCTION(execDrawStretchedTextureSegment);
    DECLARE_FUNCTION(execDrawStretchedTexture);
    DECLARE_FUNCTION(execDrawClippedTexture);
    DECLARE_FUNCTION(execClipText);
    DECLARE_FUNCTION(execPostRender);
    DECLARE_FUNCTION(execRender);
    DECLARE_CLASS(UUWindowWindow,UUWindowBase,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowWindow)
};


class UWINDOW_API UUWindowDialogControl : public UUWindowWindow
{
public:
    class UUWindowDialogClientWindow* NotifyWindow;
    FStringNoInit Text;
    INT Font;
    FColor TextColor;
    BYTE Align;
    FLOAT TextX;
    FLOAT textY;
    BITFIELD bHasKeyboardFocus:1 GCC_PACK(4);
    BITFIELD bNoKeyboard:1;
    BITFIELD bAcceptExternalDragDrop:1;
    FStringNoInit HelpText GCC_PACK(4);
    FLOAT MinWidth;
    FLOAT MinHeight;
    class UUWindowDialogControl* TabNext;
    class UUWindowDialogControl* TabPrev;
    DECLARE_CLASS(UUWindowDialogControl,UUWindowWindow,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowDialogControl)
};


class UWINDOW_API UUWindowButton : public UUWindowDialogControl
{
public:
    class UTexture* UpTexture;
    class UTexture* DownTexture;
    class UTexture* DisabledTexture;
    class UTexture* OverTexture;
    FRegion UpRegion;
    FRegion DownRegion;
    FRegion DisabledRegion;
    FRegion OverRegion;
    FLOAT RegionScale;
    FLOAT ImageX;
    FLOAT ImageY;
    INT m_iButtonID;
    BITFIELD bStretched:1 GCC_PACK(4);
    BITFIELD bUseRegion:1;
    BITFIELD m_bSelected:1;
    BITFIELD bDisabled:1;
    BITFIELD m_bDrawButtonBorders:1;
    class USound* OverSound GCC_PACK(4);
    class USound* DownSound;
    FLOAT m_fLMarge;
    FLOAT m_fFontSpacing;
    FColor m_SelectedTextColor;
    FColor m_DisabledTextColor;
    FColor m_OverTextColor;
    DECLARE_CLASS(UUWindowButton,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowButton)
};


class UWINDOW_API UUWindowComboButton : public UUWindowButton
{
public:
    class UUWindowComboControl* Owner;
    DECLARE_CLASS(UUWindowComboButton,UUWindowButton,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowComboButton)
};


class UWINDOW_API UUWindowSBRightButton : public UUWindowButton
{
public:
    FLOAT NextClickTime;
    DECLARE_CLASS(UUWindowSBRightButton,UUWindowButton,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowSBRightButton)
};


class UWINDOW_API UUWindowSBLeftButton : public UUWindowButton
{
public:
    FLOAT NextClickTime;
    DECLARE_CLASS(UUWindowSBLeftButton,UUWindowButton,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowSBLeftButton)
};


class UWINDOW_API UUWindowSBUpButton : public UUWindowButton
{
public:
    FLOAT NextClickTime;
    BITFIELD m_bHideSBWhenDisable:1 GCC_PACK(4);
    DECLARE_CLASS(UUWindowSBUpButton,UUWindowButton,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowSBUpButton)
};


class UWINDOW_API UUWindowSBDownButton : public UUWindowButton
{
public:
    FLOAT NextClickTime;
    BITFIELD m_bHideSBWhenDisable:1 GCC_PACK(4);
    DECLARE_CLASS(UUWindowSBDownButton,UUWindowButton,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowSBDownButton)
};


class UWINDOW_API UUWindowListControl : public UUWindowDialogControl
{
public:
    class UClass* ListClass;
    class UUWindowList* Items;
    FColor SelectionBkgColor;
    FColor SelectionColor;
    BITFIELD bNoSelectionBox:1 GCC_PACK(4);
    DECLARE_CLASS(UUWindowListControl,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowListControl)
};


class UWINDOW_API UUWindowComboList : public UUWindowListControl
{
public:
    class UUWindowComboControl* Owner;
    class UUWindowVScrollbar* VertSB;
    class UUWindowComboListItem* Selected;
    INT ItemHeight;
    INT VBorder;
    INT HBorder;
    INT TextBorder;
    INT MaxVisible;
    DECLARE_CLASS(UUWindowComboList,UUWindowListControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowComboList)
};


class UWINDOW_API UUWindowListBox : public UUWindowListControl
{
public:
    FLOAT ItemHeight;
    class UUWindowVScrollbar* VertSB;
    class UUWindowListBoxItem* SelectedItem;
    BITFIELD bCanDrag:1 GCC_PACK(4);
    BITFIELD bCanDragExternal:1;
    FStringNoInit DefaultHelpText GCC_PACK(4);
    BITFIELD bDragging:1 GCC_PACK(4);
    FLOAT DragY GCC_PACK(4);
    class UUWindowListBox* DoubleClickList;
    BITFIELD bHotTrack:1 GCC_PACK(4);
    INT m_IFirstItemYOffset GCC_PACK(4);
    DECLARE_CLASS(UUWindowListBox,UUWindowListControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowListBox)
};


class UWINDOW_API UUWindowComboControl : public UUWindowDialogControl
{
public:
    FLOAT EditBoxWidth;
    FLOAT EditAreaDrawX;
    FLOAT EditAreaDrawY;
    class UUWindowEditBox* EditBox;
    class UUWindowComboButton* Button;
    class UUWindowComboLeftButton* LeftButton;
    class UUWindowComboRightButton* RightButton;
    class UClass* ListClass;
    class UUWindowComboList* List;
    BITFIELD bListVisible:1 GCC_PACK(4);
    BITFIELD bCanEdit:1;
    BITFIELD bButtons:1;
    BITFIELD bSetupSize:1;
    DECLARE_CLASS(UUWindowComboControl,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowComboControl)
};


class UWINDOW_API UUWindowEditControl : public UUWindowDialogControl
{
public:
    FLOAT EditBoxWidth;
    FLOAT EditAreaDrawX;
    FLOAT EditAreaDrawY;
    class UUWindowEditBox* EditBox;
    DECLARE_CLASS(UUWindowEditControl,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowEditControl)
};

#define UCONST_szTextArraySize 80

class UWINDOW_API UUWindowTextAreaControl : public UUWindowDialogControl
{
public:
    class UFont* TextFontArea[80];
    FColor TextColorArea[80];
    FStringNoInit TextArea[80];
    FStringNoInit Prompt;
    class UFont* AbsoluteFont;
    FLOAT m_fXOffSet;
    FLOAT m_fYOffSet;
    INT Font;
    INT BufSize;
    INT Head;
    INT Tail;
    INT Lines;
    INT VisibleRows;
    BITFIELD bCursor:1 GCC_PACK(4);
    BITFIELD bScrollable:1;
    BITFIELD bShowCaret:1;
    BITFIELD bScrollOnResize:1;
    BITFIELD m_bWrapClipText:1;
    class UClass* SBVClass GCC_PACK(4);
    class UUWindowVScrollbar* VertSB;
    FLOAT LastDrawTime;
    BITFIELD bDrawBorder:1 GCC_PACK(4);
    DECLARE_CLASS(UUWindowTextAreaControl,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowTextAreaControl)
};


class UWINDOW_API UUWindowWrappedTextArea : public UUWindowTextAreaControl
{
public:
    DECLARE_CLASS(UUWindowWrappedTextArea,UUWindowTextAreaControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowWrappedTextArea)
};


class UWINDOW_API UUWindowHScrollbar : public UUWindowDialogControl
{
public:
    class UUWindowSBLeftButton* LeftButton;
    class UUWindowSBRightButton* RightButton;
    BITFIELD bDisabled:1 GCC_PACK(4);
    FLOAT MinPos GCC_PACK(4);
    FLOAT MaxPos;
    FLOAT MaxVisible;
    FLOAT pos;
    FLOAT ThumbStart;
    FLOAT ThumbWidth;
    FLOAT NextClickTime;
    FLOAT DragX;
    BITFIELD bDragging:1 GCC_PACK(4);
    FLOAT ScrollAmount GCC_PACK(4);
    DECLARE_CLASS(UUWindowHScrollbar,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowHScrollbar)
};


class UWINDOW_API UUWindowLabelControl : public UUWindowDialogControl
{
public:
    BITFIELD m_bDrawButtonBorders:1 GCC_PACK(4);
    FLOAT m_fLMarge GCC_PACK(4);
    FLOAT m_fFontSpacing;
    DECLARE_CLASS(UUWindowLabelControl,UUWindowDialogControl,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowLabelControl)
};


class UWINDOW_API UUWindowVScrollbar : public UUWindowWindow
{
public:
    class UUWindowSBUpButton* UpButton;
    class UUWindowSBDownButton* DownButton;
    BITFIELD bDisabled:1 GCC_PACK(4);
    FLOAT MinPos GCC_PACK(4);
    FLOAT MaxPos;
    FLOAT MaxVisible;
    FLOAT pos;
    FLOAT ThumbStart;
    FLOAT ThumbHeight;
    FLOAT NextClickTime;
    FLOAT DragY;
    BITFIELD bDragging:1 GCC_PACK(4);
    FLOAT ScrollAmount GCC_PACK(4);
    BITFIELD m_bHideSBWhenDisable:1 GCC_PACK(4);
    DECLARE_CLASS(UUWindowVScrollbar,UUWindowWindow,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowVScrollbar)
};

enum eGameWidgetID
{
    WidgetID_InGameDataDetails=0,
    WidgetID_InGameMenu     =1,
    WidgetID_MainMenu       =2,
    WidgetID_Credits        =3,
    WidgetID_Options        =4,
    WidgetID_Player         =5,
    WidgetID_SaveGames      =6,
    WidgetID_Intro          =7,
    WidgetID_FakeWindow     =8,
    WidgetID_Previous       =9,
    WidgetID_None           =10,
    WidgetID_MAX            =11,
};

class UWINDOW_API UUWindowRootWindow : public UUWindowWindow
{
public:
    class UUWindowWindow* MouseWindow;
    BITFIELD bMouseCapture:1 GCC_PACK(4);
    FLOAT MouseX GCC_PACK(4);
    FLOAT MouseY;
    FLOAT OldMouseX;
    FLOAT OldMouseY;
    class UWindowConsole* Console;
    class UUWindowWindow* FocusedWindow;
    class UUWindowWindow* KeyFocusWindow;
    FMouseCursor NormalCursor;
    FMouseCursor MoveCursor;
    FMouseCursor DiagCursor1;
    FMouseCursor HandCursor;
    FMouseCursor HSplitCursor;
    FMouseCursor VSplitCursor;
    FMouseCursor DiagCursor2;
    FMouseCursor NSCursor;
    FMouseCursor WECursor;
    FMouseCursor WaitCursor;
    BITFIELD bQuickKeyEnable:1 GCC_PACK(4);
    class UUWindowHotkeyWindowList* HotkeyWindows GCC_PACK(4);
    FLOAT GUIScale;
    FLOAT RealWidth;
    FLOAT RealHeight;
    class UFont* Fonts[10];
    class UUWindowLookAndFeel* LooksAndFeels[20];
    FStringNoInit LookAndFeelClass;
    BITFIELD bRequestQuit:1 GCC_PACK(4);
    FLOAT QuitTime GCC_PACK(4);
    BITFIELD bAllowConsole:1 GCC_PACK(4);
    BITFIELD bDisableMouseDisplay:1;
    DECLARE_CLASS(UUWindowRootWindow,UUWindowWindow,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowRootWindow)
};


class UWINDOW_API UUWindowClientWindow : public UUWindowWindow
{
public:
    DECLARE_CLASS(UUWindowClientWindow,UUWindowWindow,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowClientWindow)
};


class UWINDOW_API UUWindowDialogClientWindow : public UUWindowClientWindow
{
public:
    FLOAT DesiredWidth;
    FLOAT DesiredHeight;
    class UUWindowDialogControl* TabLast;
    DECLARE_CLASS(UUWindowDialogClientWindow,UUWindowClientWindow,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowDialogClientWindow)
};


class UWINDOW_API UUWindowList : public UUWindowBase
{
public:
    class UUWindowList* Next;
    class UUWindowList* Last;
    class UUWindowList* Prev;
    class UUWindowList* Sentinel;
    INT InternalCount;
    BITFIELD bItemOrderChanged:1 GCC_PACK(4);
    BITFIELD bSuspendableSort:1;
    INT CompareCount GCC_PACK(4);
    BITFIELD bSortSuspended:1 GCC_PACK(4);
    class UUWindowList* CurrentSortItem GCC_PACK(4);
    BITFIELD bTreeSort:1 GCC_PACK(4);
    class UUWindowList* BranchLeft GCC_PACK(4);
    class UUWindowList* BranchRight;
    class UUWindowList* ParentNode;
    INT Tag;
    DECLARE_CLASS(UUWindowList,UUWindowBase,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowList)
};


class UWINDOW_API UUWindowListBoxItem : public UUWindowList
{
public:
    FStringNoInit Caption;
    BITFIELD bSelected:1 GCC_PACK(4);
    FStringNoInit HelpText GCC_PACK(4);
    DECLARE_CLASS(UUWindowListBoxItem,UUWindowList,0,UWindow)
    NO_DEFAULT_CONSTRUCTOR(UUWindowListBoxItem)
};

#endif

AUTOGENERATE_FUNCTION(UUWindowWindow,4020,execGetTime);
AUTOGENERATE_FUNCTION(UUWindowWindow,4004,execDrawStretchedTextureSegment);
AUTOGENERATE_FUNCTION(UUWindowWindow,4003,execDrawStretchedTexture);
AUTOGENERATE_FUNCTION(UUWindowWindow,4002,execDrawClippedTexture);
AUTOGENERATE_FUNCTION(UUWindowWindow,4001,execClipText);
AUTOGENERATE_FUNCTION(UUWindowWindow,4005,execPostRender);
AUTOGENERATE_FUNCTION(UUWindowWindow,4000,execRender);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
